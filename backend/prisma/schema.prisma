// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{

  id Int @id @default(autoincrement())
  username String 
  email String @unique
  password String
  refreshToken String?
  content Content[]
  link Link[]

}

enum ContentType{
  
  tweet
  video
  document
  link

}


model Content{
  id Int @id @default(autoincrement())
  type ContentType
  link  String
  title String 
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId Int
  links  Link[]
  author  User   @relation(fields:[authorId],references: [id])
  //tags have many to many realtionsip that's why i write like this not lke this tags  Tags[]
  tags Tags[] @relation("ContentTags")
  
}

model Tags{
  id Int @id @default(autoincrement())
  title String @unique
  //here content is many to many realtionship  so that's why i commented 
  // contentId Int
  // content Content @relation(fields: [contentId],references: [id])

  //new line
  contents Content[] @relation("ContentTags")
  //here Content Tags stablish the realtionships
}

model Link{
   id Int @id @default(autoincrement())
   hash String @unique  //random string 
   userId Int    //which user created the link
   contentId Int?
   user User @relation(fields: [ userId],references: [id])
   content Content? @relation(fields: [contentId],references: [id])
}

